/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

USER_TYPE("|TOP_SCOMP|SCOMP:inst|STATE")
{
	VALUES = "STATE.RESET_PC", "STATE.FETCH", "STATE.DECODE", "STATE.EX_LOAD", "STATE.EX_STORE", "STATE.EX_STORE2", "STATE.EX_ADD", "STATE.EX_JUMP", "STATE.EX_AND", "STATE.EX_SUB", "STATE.EX_JNEG", "STATE.EX_JPOS", "STATE.EX_JZERO", "STATE.EX_OR", "STATE.EX_XOR", "STATE.EX_ADDI", "STATE.EX_SHIFT", "STATE.EX_CALL", "STATE.EX_RETURN";
}

SIGNAL("SCOMP:inst|STATE")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|TOP_SCOMP|SCOMP:inst|STATE";
}

SIGNAL("KEY[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLOCK_50")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SCOMP_CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("MDR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MDR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MAR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MAR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("AC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AC[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("SCOMP:inst|MW")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

TRANSITION_LIST("SCOMP:inst|STATE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL STATE.RESET_PC FOR 132.526;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 14.996;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.EX_CALL FOR 14.996;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 15.0;
		LEVEL STATE.EX_LOAD FOR 15.0;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 15.0;
		LEVEL STATE.EX_AND FOR 15.0;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 15.0;
		LEVEL STATE.EX_XOR FOR 15.0;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 15.0;
		LEVEL STATE.EX_STORE FOR 14.996;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.EX_STORE2 FOR 14.996;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 14.996;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.EX_RETURN FOR 14.996;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 14.996;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.EX_JUMP FOR 14.996;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 14.996;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.EX_CALL FOR 14.996;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 15.0;
		LEVEL STATE.EX_LOAD FOR 15.0;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 15.0;
		LEVEL STATE.EX_AND FOR 15.0;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 15.0;
		LEVEL STATE.EX_XOR FOR 15.0;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 15.0;
		LEVEL STATE.EX_STORE FOR 14.996;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.EX_STORE2 FOR 14.996;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.FETCH FOR 15.0;
		LEVEL STATE.DECODE FOR 13.733;
		LEVEL Undefined FOR 0.237;
		LEVEL STATE.RESET_PC FOR 268.5;
	}
}

TRANSITION_LIST("KEY[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17.734;
		LEVEL 1 FOR 705.835;
		LEVEL 0 FOR 5.431;
		LEVEL 1 FOR 9.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 9.0;
		}
		LEVEL 0 FOR 9.0;
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("CLOCK_50")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 55;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 9.0;
		}
		LEVEL 0 FOR 9.0;
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("SCOMP_CLK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 12.638;
		LEVEL 0 FOR 18.596;
		LEVEL X FOR 93.832;
		LEVEL 1 FOR 2.13;
		NODE
		{
			REPEAT = 40;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
		}
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 2.373;
		LEVEL 0 FOR 5.431;
		NODE
		{
			REPEAT = 14;
			LEVEL X FOR 9.0;
			LEVEL 0 FOR 9.0;
		}
		LEVEL X FOR 5.5;
	}
}

TRANSITION_LIST("PC[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 181.648;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 488.352;
	}
}

TRANSITION_LIST("PC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 331.324;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 338.676;
	}
}

TRANSITION_LIST("PC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 241.608;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 338.392;
	}
}

TRANSITION_LIST("PC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 151.808;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 278.192;
	}
}

TRANSITION_LIST("MDR[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 252.525;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 387.475;
	}
}

TRANSITION_LIST("MDR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17.362;
		LEVEL 1 FOR 144.558;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 283.08;
	}
}

TRANSITION_LIST("MDR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 237.421;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 42.095;
		LEVEL 1 FOR 17.905;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 282.579;
	}
}

TRANSITION_LIST("MDR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 297.15;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 282.85;
	}
}

TRANSITION_LIST("MDR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 281.982;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 328.018;
	}
}

TRANSITION_LIST("MDR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 162.083;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 267.917;
	}
}

TRANSITION_LIST("MDR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 296.996;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 283.004;
	}
}

TRANSITION_LIST("MDR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 251.987;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 42.095;
		LEVEL 1 FOR 17.905;
		LEVEL 0 FOR 195.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 283.013;
	}
}

TRANSITION_LIST("MDR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 207.021;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 87.095;
		LEVEL 1 FOR 17.905;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 282.979;
	}
}

TRANSITION_LIST("MDR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 207.256;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 432.744;
	}
}

TRANSITION_LIST("MDR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 161.972;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 135.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 283.028;
	}
}

TRANSITION_LIST("MDR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17.159;
		LEVEL 1 FOR 234.558;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 42.095;
		LEVEL 0 FOR 32.905;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 135.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 15.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 268.283;
	}
}

TRANSITION_LIST("MDR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 207.524;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 432.476;
	}
}

TRANSITION_LIST("MDR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 207.219;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 282.781;
	}
}

TRANSITION_LIST("MDR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 207.231;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 195.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 327.769;
	}
}

TRANSITION_LIST("MDR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 207.072;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 27.095;
		LEVEL 1 FOR 17.905;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 282.928;
	}
}

TRANSITION_LIST("MAR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 197.469;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 150.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 292.531;
	}
}

TRANSITION_LIST("MAR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 152.806;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 277.194;
	}
}

TRANSITION_LIST("MAR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 332.067;
		LEVEL 1 FOR 0.723;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 269.277;
		LEVEL 1 FOR 0.723;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 277.21;
	}
}

TRANSITION_LIST("MAR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 272.516;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 292.484;
	}
}

TRANSITION_LIST("MAR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 152.456;
		LEVEL 1 FOR 0.252;
		LEVEL 0 FOR 44.748;
		LEVEL 1 FOR 0.252;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 14.748;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 0.252;
		LEVEL 0 FOR 44.748;
		LEVEL 1 FOR 0.252;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 292.292;
	}
}

TRANSITION_LIST("AC[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AC[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AC[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 316.72;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 353.28;
	}
}

TRANSITION_LIST("AC[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 317.465;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 352.535;
	}
}

TRANSITION_LIST("AC[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AC[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AC[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 316.357;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 353.643;
	}
}

TRANSITION_LIST("AC[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 316.303;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 353.697;
	}
}

TRANSITION_LIST("AC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 226.592;
		LEVEL 1 FOR 773.408;
	}
}

TRANSITION_LIST("AC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 226.362;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 398.638;
	}
}

TRANSITION_LIST("AC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 226.657;
		LEVEL 1 FOR 773.343;
	}
}

TRANSITION_LIST("AC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 226.588;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 398.412;
	}
}

TRANSITION_LIST("AC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 226.645;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 398.355;
	}
}

TRANSITION_LIST("AC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 226.679;
		LEVEL 1 FOR 773.321;
	}
}

TRANSITION_LIST("AC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 226.935;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 398.065;
	}
}

TRANSITION_LIST("AC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 226.749;
		LEVEL 1 FOR 773.251;
	}
}

TRANSITION_LIST("SCOMP:inst|MW")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 357.526;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 315.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 297.474;
	}
}

DISPLAY_LINE
{
	CHANNEL = "KEY[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLOCK_50";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP_CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "PC[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "MDR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "AC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47;
}

DISPLAY_LINE
{
	CHANNEL = "AC[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|STATE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MAR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
	CHILDREN = 50, 51, 52, 53, 54, 55, 56, 57, 58, 59;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MW";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
